<metadata>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text.subrip']/class[@name='SubripSubtitle']"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text.webvtt']/class[@name='WebvttSubtitle']"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text.ttml']/class[@name='TtmlSubtitle']"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text.dvb']/class[@name='DvbSubtitle']"
        name="visibility"
        >
        public
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.video']/interface[@name='VideoRendererEventListener']/method[@name='onVideoSizeChanged' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='float']]"
        name="managedName"
        >
        VideoRendererSizeChangedEventArgs
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='BaseMediaSource']/method[@name='prepareSourceInternal' and count(parameter)=1 and parameter[1][@type='androidx.media2.exoplayer.external.upstream.TransferListener']]"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='BaseMediaSource']/method[@name='releaseSourceInternal' and count(parameter)=0]"
        name="visibility"
        >
        public
    </attr>

    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.analytics']/class[@name='AnalyticsCollector']/implements[@name='androidx.media2.exoplayer.external.video.VideoRendererEventListener']"
        >
    </remove-node>
    <add-node
        path="/api/package[@name='androidx.media2.exoplayer.external.drm']/class[@name='DrmInitData']"
        >
        <method
            visibility="public" static="false" abstract="false" return="int" name="compare"
            native="false" synchronized="false" final="false" deprecated="not deprecated"
            >
            <parameter type="java.lang.Object" name="lhs"  />
            <parameter type="java.lang.Object" name="rhs"  />
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='androidx.media2.exoplayer.external.text.dvb']/class[@name='DvbDecoder']"
        >
        <method
            visibility="protected" static="false" abstract="false" return="androidx.media2.exoplayer.external.text.SubtitleDecoderException" name="createUnexpectedDecodeException"
            deprecated="not deprecated" final="true"
            jni-signature="(Ljava/lang/Throwable;)Landroidx/media2/exoplayer/external/text/SubtitleDecoderException;"
            bridge="false" native="false"  jni-return="Landroidx/media2/exoplayer/external/text/SubtitleDecoderException;" synchronized="false" synthetic="false"
            >
            <parameter type="java.lang.Throwable" name="error" >
            </parameter>
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='androidx.media2.exoplayer.external.offline']/class[@name='StreamKey']"
        >
        <method
            visibility="public" static="false" abstract="false" return="int" name="compareTo"
            native="false" synchronized="false" final="false" deprecated="not deprecated"
            >
            <parameter type="java.lang.Object" name="obj" />
        </method>
    </add-node>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text.ssa']/class[@name='SsaSubtitle']"
        name="visibility"
        >
        public
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='BaseTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[1]"
        name="managedName"
        >
        playbackPositionUs
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='BaseTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[2]"
        name="managedName"
        >
        bufferedDurationUs
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='BaseTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[3]"
        name="managedName"
        >
        availableDurationUs
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='BaseTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[4]"
        name="managedName"
        >
        queue
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='BaseTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[5]"
        name="managedName"
        >
        mediaChunkIterators
    </attr>

    <!--
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='BaseTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[4]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Source.Chunk.MediaChunk &gt;
    </attr>
    -->

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='BaseTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[4]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/interface[@name='TrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List&lt;? extends androidx.media2.exoplayer.external.source.chunk.MediaChunk&gt;'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[4]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='RandomTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[4]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='FixedTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[4]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='AdaptiveTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[4]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='AdaptiveTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List&lt;? extends androidx.media2.exoplayer.external.source.chunk.MediaChunk&gt;'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>


    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.text.dvb']/class[@name='DvbDecoder']/method[@name='createUnexpectedDecodeException' and count(parameter)=1 and parameter[1][@type='java.lang.Throwable']]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.text']/class[@name='SimpleSubtitleDecoder']/method[@name='createUnexpectedDecodeException' and count(parameter)=1 and parameter[1][@type='java.lang.Throwable']]"
        />
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text.webvtt']/class[@name='Mp4WebvttDecoder']/method[@name='decode']"
        name="visibility"
        >
        public
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='PriorityDataSourceFactory']/method[@name='createDataSource' and count(parameter)=0]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.UpStream.IDataSource
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='DefaultDataSourceFactory']/method[@name='createDataSource' and count(parameter)=0]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.UpStream.IDataSource
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='DefaultDataSourceFactory']/method[@name='createDataSource' and count(parameter)=0]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.UpStream.IDataSource
    </attr>


    <!--
        System.Collections.Generic.IDictionary &lt; string, System.Collections.Generic.IList &lt; string &gt; &gt;
        Java.Util.Dictionary
        Android.Runtime.JavaDictionary &lt;string, System.Collections.Generic.IList&lt;string&gt;&gt;
        Java.Lang.Object
    -->
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/interface[@name='DataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        name="managedReturn"
        >
        Java.Util.Map
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='BaseDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        name="managedReturn"
        >
        Java.Util.Map
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='DummyDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        name="managedReturn"
        >
        Java.Util.Map
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='DefaultDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        name="managedReturn"
        >
        Java.Util.Map
    </attr>


    <add-node
        path="/api/package[@name='androidx.media2.exoplayer.external.source.hls.playlist']/class[@name='HlsPlaylist']"
        >
        <method abstract="false" deprecated="not deprecated" final="false" name="copy" jni-signature="(Ljava/util/List;)Ljava/lang/Object;" bridge="false" native="false" return="T" jni-return="TT;" static="false" synchronized="false" synthetic="false" visibility="public">
            <parameter name="streamKeys" type="java.util.List&lt;androidx.media2.exoplayer.external.offline.StreamKey&gt;" jni-type="Ljava/util/List&lt;Landroidx/media2/exoplayer/external/offline/StreamKey;&gt;;">
            </parameter>
        </method>
    </add-node>

    <add-node
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ConcatenatingMediaSource.MediaSourceHolder']"
        >
    </add-node>


    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text.dvb']/class[@name='DvbDecoder']/method[@name='decode' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='boolean']]"
        name="managedReturn"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text']/class[@name='SimpleSubtitleDecoder']/method[@name='decode' and count(parameter)=3 and parameter[1][@type='androidx.media2.exoplayer.external.text.SubtitleInputBuffer'] and parameter[2][@type='androidx.media2.exoplayer.external.text.SubtitleOutputBuffer'] and parameter[3][@type='boolean']]"
        name="managedReturn"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text.pgs']/class[@name='PgsDecoder']/method[@name='decode' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='boolean']]"
        name="managedReturn"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text.ssa']/class[@name='SsaDecoder']/method[@name='decode' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='boolean']]"
        name="managedReturn"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text.subrip']/class[@name='SubripDecoder']/method[@name='decode' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='int'] and parameter[3][@type='boolean']]"
        name="managedReturn"
        >
        Java.Lang.Object
    </attr>



    <!--
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.audio']/interface[@name='AudioListener']/method[@name='onAudioSessionId' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]"
        name="managedName"
        >
        audioListenerSessionId
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.audio']/interface[@name='AudioListener']/method[@name='onAudioSessionId' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]"
        name="argsType"
        >
        AudioListener.AudioListenerAudioSessionId
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.audio']/interface[@name='AudioRendererEventListener']/method[@name='onAudioSessionId' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]"
        name="managedName"
        >
        audioRendererListenerSessionId
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.audio']/interface[@name='AudioRendererEventListener']/method[@name='onAudioSessionId' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]"
        name="argsType"
        >
        AudioRendererEventListener.AudioRendererEventListenerAudioSessionId
    </attr>
    -->

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ClippingMediaSource']/method[@name='onChildSourceInfoRefreshed' and count(parameter)=4 and parameter[1][@type='java.lang.Void'] and parameter[2][@type='androidx.media2.exoplayer.external.source.MediaSource'] and parameter[3][@type='androidx.media2.exoplayer.external.Timeline'] and parameter[4][@type='java.lang.Object']]/parameter[1]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.audio']/interface[@name='AudioListener']/method[@name='onAudioSessionId' and count(parameter)=1 and parameter[1][@type='int']]"
        name="argsType"
        >
        AudioListenerAudioSessionIdEventArgs
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.audio']/interface[@name='AudioRendererEventListener']/method[@name='onAudioSessionId' and count(parameter)=1 and parameter[1][@type='int']]"
        name="argsType"
        >
        AudioRendererEventListenerAudioSessionIdEventArgs
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.audio']/interface[@name='AudioSink.Listener']/method[@name='onAudioSessionId' and count(parameter)=1 and parameter[1][@type='int']]"
        name="argsType"
        >
        AudioSinkListenerAudioSessionIdEventArgs
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.audio']/interface[@name='AudioListener']/method[@name='onAudioSessionId' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]"
        name="managedName"
        >
        audioListenerAudioSessionId
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.audio']/interface[@name='AudioRendererEventListener']/method[@name='onAudioSessionId' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]"
        name="managedName"
        >
        audioRendererEventListenerAudioSessionId
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.audio']/interface[@name='AudioSink.Listener']/method[@name='onAudioSessionId' and count(parameter)=1 and parameter[1][@type='int']]/parameter[1]"
        name="managedName"
        >
        audioSinkListenerAudioSessionId
    </attr>

    <!--

    -->
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.extractor']/class[@name='BinarySearchSeeker.BinarySearchSeekMap']/constructor[@name='BinarySearchSeeker.BinarySearchSeekMap' and count(parameter)=7 and parameter[1][@type='androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.SeekTimestampConverter'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='long'] and parameter[5][@type='long'] and parameter[6][@type='long'] and parameter[7][@type='long']]"
        name="visibility"
        >
        internal
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source.ads']/class[@name='AdsMediaSource']/method[@name='onChildSourceInfoRefreshed' and count(parameter)=4 and parameter[1][@type='androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId'] and parameter[2][@type='androidx.media2.exoplayer.external.source.MediaSource'] and parameter[3][@type='androidx.media2.exoplayer.external.Timeline'] and parameter[4][@type='java.lang.Object']]/parameter[1]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>


    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/interface[@name='DataSource.Factory']/method[@name='createDataSource' and count(parameter)=0]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.UpStream.IHttpDataSource
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='ResolvingDataSource.Factory']/method[@name='createDataSource' and count(parameter)=0]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.UpStream.IHttpDataSource
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='PriorityDataSourceFactory']/method[@name='createDataSource' and count(parameter)=0]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.UpStream.IHttpDataSource
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='FileDataSourceFactory']/method[@name='createDataSource' and count(parameter)=0]"    
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.UpStream.IHttpDataSource
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='DefaultDataSourceFactory']/method[@name='createDataSource' and count(parameter)=0]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.UpStream.IHttpDataSource
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ProgressiveMediaSource.Factory']/method[@name='createMediaSource' and count(parameter)=1 and parameter[1][@type='android.net.Uri']]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.Source.IMediaSource
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ProgressiveMediaSource.Factory']/method[@name='setStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]/parameter[1]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Offline.StreamKey &gt;
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source.chunk']/class[@name='ChunkExtractorWrapper']/method[@name='seekMap' and count(parameter)=1 and parameter[1][@type='androidx.media2.exoplayer.external.extractor.SeekMap']]"
        name="managedName"
        >
        SeekMap
    </attr>

</metadata>